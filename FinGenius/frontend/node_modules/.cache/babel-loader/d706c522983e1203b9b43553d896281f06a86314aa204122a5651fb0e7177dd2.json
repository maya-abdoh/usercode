{"ast":null,"code":"// Import required hooks and libraries\nconst navigate = useNavigate();\n\n// State variables to manage the alert\nconst [alertType, setAlertType] = useState(null);\nconst [alertMessage, setAlertMessage] = useState(\"\");\nconst [isLoading, setIsLoading] = useState(true); // Add a loading state\nconst [partners, setPartners] = useState([]);\nconst [products, setProducts] = useState([]);\nconst [page, setPage] = useState(1);\nconst [productId, setProductId] = useState(\"\");\nconst [quantity, setQuantity] = useState(0);\nuseEffect(() => {\n  const fetchData = async () => {\n    try {\n      const [invoiceNumberResponse, partnersResponse, productsResponse] = await Promise.all([axios.get(`/invoices?type=${invoiceType}`), axios.get(`/partners?type=${invoiceType === \"sales\" ? \"customer\" : \"vendor\"}&status=Active`), axios.get(`/products?status=Active`)]);\n\n      // Handle the response for invoice numbers\n      if (invoiceNumberResponse.status === 200) {\n        const totalInvoices = invoiceNumberResponse.data.length;\n        const nextInvoiceNumber = `${invoiceType === \"sales\" ? \"SI\" : \"PI\"}-${String(totalInvoices + 1).padStart(4, \"0\")}`;\n        setInvoiceData(prevData => ({\n          ...prevData,\n          invoiceNo: nextInvoiceNumber\n        }));\n      } else {\n        setAlertType(\"danger\");\n        setAlertMessage(\"Failed to generate Invoice No.\");\n      }\n\n      // Handle the response for partners\n      if (partnersResponse.status === 200) {\n        setPartners(partnersResponse.data);\n      } else {\n        setAlertType(\"danger\");\n        setAlertMessage(`${invoiceType === \"sales\" ? \"Customers\" : \"Vendors\"} not found.`);\n      }\n\n      // Handle the response for products\n      if (productsResponse.status === 200) {\n        setProducts(productsResponse.data);\n      } else {\n        setAlertType(\"danger\");\n        setAlertMessage(`Failed to retrieve products: ${productsResponse.status} ${productsResponse.statusText}`);\n      }\n      setIsLoading(false); // Set loading to false after all requests are completed\n    } catch (error) {\n      setAlertType(\"danger\");\n      setAlertMessage(`Failed to fetch data: ${error.message}`);\n      setIsLoading(false);\n    }\n  };\n  fetchData();\n}, [invoiceType]);\nconst addProduct = () => {\n  if (productId && quantity) {\n    const selectedProduct = products.find(product => product._id === productId);\n    if (selectedProduct) {\n      const valueOfSupplies = quantity * selectedProduct.rate;\n      const salesTax = valueOfSupplies * selectedProduct.salesTax / 100;\n      const netAmount = valueOfSupplies + salesTax;\n      const newItem = {\n        productName: selectedProduct.name,\n        quantity,\n        rate: selectedProduct.rate,\n        valueOfSupplies: valueOfSupplies.toString(),\n        salesTax: salesTax.toString(),\n        netAmount: netAmount.toString()\n      };\n      setInvoiceData(prevData => ({\n        ...prevData,\n        invoiceTotal: prevData.invoiceTotal + netAmount,\n        invoiceItems: [...prevData.invoiceItems, newItem]\n      }));\n      setProductId(\"\");\n      setQuantity(0);\n    } else {\n      alert(\"Selected product not found.\");\n    }\n  }\n};\nconst handleRemoveInvoiceItem = itemToRemove => {\n  const updatedInvoiceItems = invoiceItems.filter(item => item !== itemToRemove);\n  const newInvoiceTotal = updatedInvoiceItems.reduce((total, item) => total + parseFloat(item.netAmount), 0);\n  setInvoiceData(prevData => ({\n    ...prevData,\n    invoiceTotal: newInvoiceTotal,\n    invoiceItems: updatedInvoiceItems\n  }));\n};\nconst handleChange = e => {\n  const {\n    name,\n    value\n  } = e.target;\n  setInvoiceData(prevData => ({\n    ...prevData,\n    [name]: value\n  }));\n};\nconst addDaysToDate = daysToAdd => {\n  const currentDate = new Date();\n  const invoiceDate = currentDate.toISOString().split(\"T\")[0];\n  const newDate = new Date(currentDate.getTime() + daysToAdd * 24 * 60 * 60 * 1000);\n  const dueDate = newDate.toISOString().split(\"T\")[0];\n  return {\n    invoiceDate,\n    dueDate\n  };\n};\nconst handleCreditTermChange = e => {\n  const newCreditTerm = e.target.value === \"\" ? null : parseInt(e.target.value);\n  const {\n    invoiceDate,\n    dueDate\n  } = addDaysToDate(newCreditTerm || 0);\n  setInvoiceData(prevData => ({\n    ...prevData,\n    creditTerm: newCreditTerm,\n    invoiceDate,\n    dueDate\n  }));\n};\nconst handleSubmit = async e => {\n  e.preventDefault();\n  try {\n    const response = await axios.post(\"/invoices\", invoiceData);\n    if (response.status === 201) {\n      setAlertType(\"success\");\n      setAlertMessage(response.data);\n      setInvoiceData(initialState);\n      setPage(1);\n    } else {\n      setAlertType(\"danger\");\n      setAlertMessage(`Failed to add ${invoiceType} invoice: ${response.status} ${response.statusText}`);\n    }\n  } catch (error) {\n    setAlertType(\"danger\");\n    setAlertMessage(`Failed to add ${invoiceType} invoice: ${error.message}`);\n  }\n};\nconst handleCancel = () => {\n  navigate(`/${invoiceType}invoices`);\n};\nconst handleNavigation = () => {\n  setPage(page === 1 ? 2 : 1);\n};\nconst progressBarWidth = (page === 1 ? 50 : 100) + \"%\";","map":{"version":3,"names":["navigate","useNavigate","alertType","setAlertType","useState","alertMessage","setAlertMessage","isLoading","setIsLoading","partners","setPartners","products","setProducts","page","setPage","productId","setProductId","quantity","setQuantity","useEffect","fetchData","invoiceNumberResponse","partnersResponse","productsResponse","Promise","all","axios","get","invoiceType","status","totalInvoices","data","length","nextInvoiceNumber","String","padStart","setInvoiceData","prevData","invoiceNo","statusText","error","message","addProduct","selectedProduct","find","product","_id","valueOfSupplies","rate","salesTax","netAmount","newItem","productName","name","toString","invoiceTotal","invoiceItems","alert","handleRemoveInvoiceItem","itemToRemove","updatedInvoiceItems","filter","item","newInvoiceTotal","reduce","total","parseFloat","handleChange","e","value","target","addDaysToDate","daysToAdd","currentDate","Date","invoiceDate","toISOString","split","newDate","getTime","dueDate","handleCreditTermChange","newCreditTerm","parseInt","creditTerm","handleSubmit","preventDefault","response","post","invoiceData","initialState","handleCancel","handleNavigation","progressBarWidth"],"sources":["D:/usercode/FinGenius/frontend/src/components/AddInvoice.jsx"],"sourcesContent":["// Import required hooks and libraries\r\nconst navigate = useNavigate();\r\n\r\n// State variables to manage the alert\r\nconst [alertType, setAlertType] = useState(null);\r\nconst [alertMessage, setAlertMessage] = useState(\"\");\r\n\r\nconst [isLoading, setIsLoading] = useState(true); // Add a loading state\r\nconst [partners, setPartners] = useState([]);\r\nconst [products, setProducts] = useState([]);\r\nconst [page, setPage] = useState(1);\r\nconst [productId, setProductId] = useState(\"\");\r\nconst [quantity, setQuantity] = useState(0);\r\n\r\nuseEffect(() => {\r\n  const fetchData = async () => {\r\n    try {\r\n      const [invoiceNumberResponse, partnersResponse, productsResponse] =\r\n        await Promise.all([\r\n          axios.get(`/invoices?type=${invoiceType}`),\r\n          axios.get(\r\n            `/partners?type=${\r\n              invoiceType === \"sales\" ? \"customer\" : \"vendor\"\r\n            }&status=Active`\r\n          ),\r\n          axios.get(`/products?status=Active`),\r\n        ]);\r\n\r\n      // Handle the response for invoice numbers\r\n      if (invoiceNumberResponse.status === 200) {\r\n        const totalInvoices = invoiceNumberResponse.data.length;\r\n        const nextInvoiceNumber = `${\r\n          invoiceType === \"sales\" ? \"SI\" : \"PI\"\r\n        }-${String(totalInvoices + 1).padStart(4, \"0\")}`;\r\n        setInvoiceData((prevData) => ({\r\n          ...prevData,\r\n          invoiceNo: nextInvoiceNumber,\r\n        }));\r\n      } else {\r\n        setAlertType(\"danger\");\r\n        setAlertMessage(\"Failed to generate Invoice No.\");\r\n      }\r\n\r\n      // Handle the response for partners\r\n      if (partnersResponse.status === 200) {\r\n        setPartners(partnersResponse.data);\r\n      } else {\r\n        setAlertType(\"danger\");\r\n        setAlertMessage(\r\n          `${invoiceType === \"sales\" ? \"Customers\" : \"Vendors\"} not found.`\r\n        );\r\n      }\r\n\r\n      // Handle the response for products\r\n      if (productsResponse.status === 200) {\r\n        setProducts(productsResponse.data);\r\n      } else {\r\n        setAlertType(\"danger\");\r\n        setAlertMessage(\r\n          `Failed to retrieve products: ${productsResponse.status} ${productsResponse.statusText}`\r\n        );\r\n      }\r\n\r\n      setIsLoading(false); // Set loading to false after all requests are completed\r\n    } catch (error) {\r\n      setAlertType(\"danger\");\r\n      setAlertMessage(`Failed to fetch data: ${error.message}`);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  fetchData();\r\n}, [invoiceType]);\r\n\r\nconst addProduct = () => {\r\n  if (productId && quantity) {\r\n    const selectedProduct = products.find(\r\n      (product) => product._id === productId\r\n    );\r\n\r\n    if (selectedProduct) {\r\n      const valueOfSupplies = quantity * selectedProduct.rate;\r\n      const salesTax = (valueOfSupplies * selectedProduct.salesTax) / 100;\r\n      const netAmount = valueOfSupplies + salesTax;\r\n\r\n      const newItem = {\r\n        productName: selectedProduct.name,\r\n        quantity,\r\n        rate: selectedProduct.rate,\r\n        valueOfSupplies: valueOfSupplies.toString(),\r\n        salesTax: salesTax.toString(),\r\n        netAmount: netAmount.toString(),\r\n      };\r\n\r\n      setInvoiceData((prevData) => ({\r\n        ...prevData,\r\n        invoiceTotal: prevData.invoiceTotal + netAmount,\r\n        invoiceItems: [...prevData.invoiceItems, newItem],\r\n      }));\r\n\r\n      setProductId(\"\");\r\n      setQuantity(0);\r\n    } else {\r\n      alert(\"Selected product not found.\");\r\n    }\r\n  }\r\n};\r\n\r\nconst handleRemoveInvoiceItem = (itemToRemove) => {\r\n  const updatedInvoiceItems = invoiceItems.filter(\r\n    (item) => item !== itemToRemove\r\n  );\r\n\r\n  const newInvoiceTotal = updatedInvoiceItems.reduce(\r\n    (total, item) => total + parseFloat(item.netAmount),\r\n    0\r\n  );\r\n\r\n  setInvoiceData((prevData) => ({\r\n    ...prevData,\r\n    invoiceTotal: newInvoiceTotal,\r\n    invoiceItems: updatedInvoiceItems,\r\n  }));\r\n};\r\n\r\nconst handleChange = (e) => {\r\n  const { name, value } = e.target;\r\n  setInvoiceData((prevData) => ({ ...prevData, [name]: value }));\r\n};\r\n\r\nconst addDaysToDate = (daysToAdd) => {\r\n  const currentDate = new Date();\r\n  const invoiceDate = currentDate.toISOString().split(\"T\")[0];\r\n  const newDate = new Date(\r\n    currentDate.getTime() + daysToAdd * 24 * 60 * 60 * 1000\r\n  );\r\n  const dueDate = newDate.toISOString().split(\"T\")[0];\r\n\r\n  return { invoiceDate, dueDate };\r\n};\r\n\r\nconst handleCreditTermChange = (e) => {\r\n  const newCreditTerm =\r\n    e.target.value === \"\" ? null : parseInt(e.target.value);\r\n  const { invoiceDate, dueDate } = addDaysToDate(newCreditTerm || 0);\r\n  setInvoiceData((prevData) => ({\r\n    ...prevData,\r\n    creditTerm: newCreditTerm,\r\n    invoiceDate,\r\n    dueDate,\r\n  }));\r\n};\r\n\r\nconst handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n\r\n  try {\r\n    const response = await axios.post(\"/invoices\", invoiceData);\r\n    if (response.status === 201) {\r\n      setAlertType(\"success\");\r\n      setAlertMessage(response.data);\r\n      setInvoiceData(initialState);\r\n      setPage(1);\r\n    } else {\r\n      setAlertType(\"danger\");\r\n      setAlertMessage(\r\n        `Failed to add ${invoiceType} invoice: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n  } catch (error) {\r\n    setAlertType(\"danger\");\r\n    setAlertMessage(`Failed to add ${invoiceType} invoice: ${error.message}`);\r\n  }\r\n};\r\n\r\nconst handleCancel = () => {\r\n  navigate(`/${invoiceType}invoices`);\r\n};\r\n\r\nconst handleNavigation = () => {\r\n  setPage(page === 1 ? 2 : 1);\r\n};\r\n\r\nconst progressBarWidth = (page === 1 ? 50 : 100) + \"%\";\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}