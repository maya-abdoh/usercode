{"ast":null,"code":"var _jsxFileName = \"D:\\\\usercode\\\\FinGenius\\\\frontend\\\\src\\\\components\\\\Transactions.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Spinner from \"./Spinner\";\nimport Alert from \"./Alert\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Transactions = ({\n  transactionType\n}) => {\n  _s();\n  // State variables\n  const [isLoading, setIsLoading] = useState(true);\n  const [transactions, setTransactions] = useState([]);\n  const [alertType, setAlertType] = useState(null);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n\n  // Fetch all payments/receipts\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        const response = await axios.get(`/transactions?type=${transactionType}`);\n        if (response.status === 200) {\n          if (response.data.length === 0) {\n            setAlertType(\"warning\");\n            setAlertMessage(`No ${transactionType}s found.`);\n          } else {\n            setTransactions(response.data);\n          }\n        } else {\n          setAlertType(\"danger\");\n          setAlertMessage(`Failed to retrieve ${transactionType}s: ${response.status} ${response.statusText}`);\n        }\n        setIsLoading(false);\n      } catch (error) {\n        setAlertType(\"danger\");\n        setAlertMessage(`Failed to retrieve ${transactionType}s: ${error.message}`);\n        setIsLoading(false); // Set loading state to false if there's an error\n      }\n    };\n    fetchTransactions();\n  }, [transactionType]);\n\n  // Map transaction type code to readable names\n  const getTransactionTypeName = type => {\n    const types = {\n      BPV: \"Bank Payment Voucher\",\n      CPV: \"Cash Payment Voucher\",\n      BRV: \"Bank Receipt Voucher\",\n      CRV: \"Cash Receipt Voucher\"\n    };\n    return types[type] || \"Unknown\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: transactionType === \"payment\" ? \"Payments\" : \"Receipts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"add\",\n        className: \"btn btn-outline-secondary mt-3 mb-4\",\n        children: [\"Add \", transactionType === \"payment\" ? \"Payment\" : \"Receipt\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), alertMessage ? /*#__PURE__*/_jsxDEV(Alert, {\n        type: alertType,\n        message: alertMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped table-hover\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Voucher No.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: transactionType === \"payment\" ? \"Payment To\" : \"Receipt From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.transaction.voucherNo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.transaction.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: getTransactionTypeName(transaction.transaction.type)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.partner ? `${transaction.partner.firstName} ${transaction.partner.lastName}` : \"Unknown Partner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", parseFloat(transaction.transaction.amount).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, this)]\n          }, transaction.transaction._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Transactions, \"O6Z/ZMOFWKFCA4uxaExNc+V1lI8=\");\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","Spinner","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","Transactions","transactionType","_s","isLoading","setIsLoading","transactions","setTransactions","alertType","setAlertType","alertMessage","setAlertMessage","fetchTransactions","response","get","status","data","length","statusText","error","message","getTransactionTypeName","type","types","BPV","CPV","BRV","CRV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","map","transaction","voucherNo","date","partner","firstName","lastName","parseFloat","amount","toLocaleString","_id","_c","$RefreshReg$"],"sources":["D:/usercode/FinGenius/frontend/src/components/Transactions.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"./Spinner\";\r\nimport Alert from \"./Alert\";\r\n\r\nconst Transactions = ({ transactionType }) => {\r\n  // State variables\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [alertType, setAlertType] = useState(null);\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n\r\n  // Fetch all payments/receipts\r\n  useEffect(() => {\r\n    const fetchTransactions = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `/transactions?type=${transactionType}`\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          if (response.data.length === 0) {\r\n            setAlertType(\"warning\");\r\n            setAlertMessage(`No ${transactionType}s found.`);\r\n          } else {\r\n            setTransactions(response.data);\r\n          }\r\n        } else {\r\n          setAlertType(\"danger\");\r\n          setAlertMessage(\r\n            `Failed to retrieve ${transactionType}s: ${response.status} ${response.statusText}`\r\n          );\r\n        }\r\n\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        setAlertType(\"danger\");\r\n        setAlertMessage(\r\n          `Failed to retrieve ${transactionType}s: ${error.message}`\r\n        );\r\n        setIsLoading(false); // Set loading state to false if there's an error\r\n      }\r\n    };\r\n\r\n    fetchTransactions();\r\n  }, [transactionType]);\r\n\r\n  // Map transaction type code to readable names\r\n  const getTransactionTypeName = (type) => {\r\n    const types = {\r\n      BPV: \"Bank Payment Voucher\",\r\n      CPV: \"Cash Payment Voucher\",\r\n      BRV: \"Bank Receipt Voucher\",\r\n      CRV: \"Cash Receipt Voucher\",\r\n    };\r\n    return types[type] || \"Unknown\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      {isLoading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <>\r\n          <h2>{transactionType === \"payment\" ? \"Payments\" : \"Receipts\"}</h2>\r\n          <Link to=\"add\" className=\"btn btn-outline-secondary mt-3 mb-4\">\r\n            Add {transactionType === \"payment\" ? \"Payment\" : \"Receipt\"}\r\n          </Link>\r\n\r\n          {alertMessage ? (\r\n            <Alert type={alertType} message={alertMessage} />\r\n          ) : (\r\n            <table className=\"table table-striped table-hover\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Voucher No.</th>\r\n                  <th>Date</th>\r\n                  <th>Type</th>\r\n                  <th>\r\n                    {transactionType === \"payment\"\r\n                      ? \"Payment To\"\r\n                      : \"Receipt From\"}\r\n                  </th>\r\n                  <th>Amount</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {transactions.map((transaction) => (\r\n                  <tr key={transaction.transaction._id}>\r\n                    <td>{transaction.transaction.voucherNo}</td>\r\n                    <td>{transaction.transaction.date}</td>\r\n                    <td>{getTransactionTypeName(transaction.transaction.type)}</td>\r\n                    <td>\r\n                      {transaction.partner\r\n                        ? `${transaction.partner.firstName} ${transaction.partner.lastName}`\r\n                        : \"Unknown Partner\"}\r\n                    </td>\r\n                    <td>\r\n                      $\r\n                      {parseFloat(\r\n                        transaction.transaction.amount\r\n                      ).toLocaleString()}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transactions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}