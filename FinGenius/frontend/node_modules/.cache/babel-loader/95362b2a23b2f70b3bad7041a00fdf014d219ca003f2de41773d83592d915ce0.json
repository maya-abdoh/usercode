{"ast":null,"code":"var _jsxFileName = \"D:\\\\usercode\\\\FinGenius\\\\frontend\\\\src\\\\components\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport NavBar from \"./NavBar\";\nimport Graph from \"./Graph\";\nimport Spinner from \"./Spinner\";\nimport Alert from \"./Alert\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [groupedInvoices, setGroupedInvoices] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [alert, setAlert] = useState({\n    type: null,\n    message: \"\"\n  });\n  useEffect(() => {\n    const fetchInvoices = async () => {\n      try {\n        // Fetch invoice data from the server\n        const response = await axios.get(\"/invoices\");\n        if (response.status === 200) {\n          const invoices = response.data;\n\n          // Process invoices to group by month and type\n          const now = moment();\n          const lastSixMonths = Array.from({\n            length: 6\n          }).map((_, i) => now.clone().subtract(i, \"months\").format(\"YYYY-MM\"));\n          const groupedData = lastSixMonths.map(month => {\n            const salesTotal = invoices.filter(invoice => invoice.type === \"sales\" && moment(invoice.invoiceDate).format(\"YYYY-MM\") === month).reduce((sum, invoice) => sum + parseFloat(invoice.invoiceTotal), 0);\n            const purchaseTotal = invoices.filter(invoice => invoice.type === \"purchase\" && moment(invoice.invoiceDate).format(\"YYYY-MM\") === month).reduce((sum, invoice) => sum + parseFloat(invoice.invoiceTotal), 0);\n            return {\n              month: month,\n              salesTotal: salesTotal.toFixed(2),\n              purchaseTotal: purchaseTotal.toFixed(2)\n            };\n          });\n          setGroupedInvoices(groupedData.reverse()); // Reverse to show oldest first\n        } else {\n          setAlert({\n            type: \"danger\",\n            message: `Failed to fetch invoices: ${response.status} ${response.statusText}`\n          });\n        }\n      } catch (error) {\n        setAlert({\n          type: \"danger\",\n          message: `Error fetching invoices: ${error.message}`\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchInvoices();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-center mt-4\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [alert.message && /*#__PURE__*/_jsxDEV(Alert, {\n          type: alert.type,\n          message: alert.message,\n          className: \"mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), !alert.message && groupedInvoices.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mb-4\",\n            children: \"Sales and Purchase Overview (Last 6 Months)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Graph, {\n            graphData: groupedInvoices\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"Ig5zjdzM+R7Ps2I6Ih4GwGmGSQs=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axios","NavBar","Graph","Spinner","Alert","moment","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","groupedInvoices","setGroupedInvoices","isLoading","setIsLoading","alert","setAlert","type","message","fetchInvoices","response","get","status","invoices","data","now","lastSixMonths","Array","from","length","map","_","i","clone","subtract","format","groupedData","month","salesTotal","filter","invoice","invoiceDate","reduce","sum","parseFloat","invoiceTotal","purchaseTotal","toFixed","reverse","statusText","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","graphData","_c","$RefreshReg$"],"sources":["D:/usercode/FinGenius/frontend/src/components/Home.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport NavBar from \"./NavBar\";\r\nimport Graph from \"./Graph\";\r\nimport Spinner from \"./Spinner\";\r\nimport Alert from \"./Alert\";\r\nimport moment from \"moment\";\r\n\r\nconst Home = () => {\r\n  const [groupedInvoices, setGroupedInvoices] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [alert, setAlert] = useState({ type: null, message: \"\" });\r\n\r\n  useEffect(() => {\r\n    const fetchInvoices = async () => {\r\n      try {\r\n        // Fetch invoice data from the server\r\n        const response = await axios.get(\"/invoices\");\r\n        if (response.status === 200) {\r\n          const invoices = response.data;\r\n\r\n          // Process invoices to group by month and type\r\n          const now = moment();\r\n          const lastSixMonths = Array.from({ length: 6 }).map((_, i) =>\r\n            now.clone().subtract(i, \"months\").format(\"YYYY-MM\")\r\n          );\r\n\r\n          const groupedData = lastSixMonths.map((month) => {\r\n            const salesTotal = invoices\r\n              .filter(\r\n                (invoice) =>\r\n                  invoice.type === \"sales\" &&\r\n                  moment(invoice.invoiceDate).format(\"YYYY-MM\") === month\r\n              )\r\n              .reduce((sum, invoice) => sum + parseFloat(invoice.invoiceTotal), 0);\r\n\r\n            const purchaseTotal = invoices\r\n              .filter(\r\n                (invoice) =>\r\n                  invoice.type === \"purchase\" &&\r\n                  moment(invoice.invoiceDate).format(\"YYYY-MM\") === month\r\n              )\r\n              .reduce((sum, invoice) => sum + parseFloat(invoice.invoiceTotal), 0);\r\n\r\n            return {\r\n              month: month,\r\n              salesTotal: salesTotal.toFixed(2),\r\n              purchaseTotal: purchaseTotal.toFixed(2),\r\n            };\r\n          });\r\n\r\n          setGroupedInvoices(groupedData.reverse()); // Reverse to show oldest first\r\n        } else {\r\n          setAlert({\r\n            type: \"danger\",\r\n            message: `Failed to fetch invoices: ${response.status} ${response.statusText}`,\r\n          });\r\n        }\r\n      } catch (error) {\r\n        setAlert({\r\n          type: \"danger\",\r\n          message: `Error fetching invoices: ${error.message}`,\r\n        });\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchInvoices();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"container text-center mt-4\">\r\n        {isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <>\r\n            {alert.message && (\r\n              <Alert type={alert.type} message={alert.message} className=\"mb-4\" />\r\n            )}\r\n            {!alert.message && groupedInvoices.length > 0 && (\r\n              <div>\r\n                <h3 className=\"mb-4\">Sales and Purchase Overview (Last 6 Months)</h3>\r\n                <Graph graphData={groupedInvoices} />\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}