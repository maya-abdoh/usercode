{"ast":null,"code":"var _jsxFileName = \"D:\\\\usercode\\\\FinGenius\\\\frontend\\\\src\\\\components\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport NavBar from \"./NavBar\";\nimport Graph from \"./Graph\";\nimport Spinner from \"./Spinner\";\nimport Alert from \"./Alert\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [groupedInvoices, setGroupedInvoices] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [alert, setAlert] = useState(null);\n  useEffect(() => {\n    const fetchInvoices = async () => {\n      try {\n        const response = await axios.get(\"/invoices\");\n        if (response.status === 200 && Array.isArray(response.data)) {\n          const invoices = response.data;\n\n          // Process invoices to group by month for the last 6 months\n          const lastSixMonths = [];\n          for (let i = 5; i >= 0; i--) {\n            lastSixMonths.push(moment().subtract(i, \"months\").format(\"YYYY-MM\"));\n          }\n          const groupedData = lastSixMonths.map(month => {\n            const sales = invoices.filter(invoice => invoice.type === \"sales\" && moment(invoice.invoiceDate).format(\"YYYY-MM\") === month).reduce((sum, invoice) => sum + parseFloat(invoice.invoiceTotal || 0), 0);\n            const purchases = invoices.filter(invoice => invoice.type === \"purchase\" && moment(invoice.invoiceDate).format(\"YYYY-MM\") === month).reduce((sum, invoice) => sum + parseFloat(invoice.invoiceTotal || 0), 0);\n            return {\n              month,\n              sales,\n              purchases\n            };\n          });\n          setGroupedInvoices(groupedData);\n        } else {\n          setAlert({\n            type: \"warning\",\n            message: \"No invoice data available to display.\"\n          });\n        }\n        setIsLoading(false);\n      } catch (error) {\n        setAlert({\n          type: \"danger\",\n          message: `Error fetching invoice data: ${error.message}`\n        });\n        setIsLoading(false);\n      }\n    };\n    fetchInvoices();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container text-center mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sales and Purchase Overview (Last 6 Months)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), alert && /*#__PURE__*/_jsxDEV(Alert, {\n        type: alert.type,\n        message: alert.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Graph, {\n        graphData: groupedInvoices\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"Y1tD9yCp7Yf1eKlibLocqwk8jOY=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axios","NavBar","Graph","Spinner","Alert","moment","jsxDEV","_jsxDEV","Home","_s","groupedInvoices","setGroupedInvoices","isLoading","setIsLoading","alert","setAlert","fetchInvoices","response","get","status","Array","isArray","data","invoices","lastSixMonths","i","push","subtract","format","groupedData","map","month","sales","filter","invoice","type","invoiceDate","reduce","sum","parseFloat","invoiceTotal","purchases","message","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","graphData","_c","$RefreshReg$"],"sources":["D:/usercode/FinGenius/frontend/src/components/Home.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport NavBar from \"./NavBar\";\r\nimport Graph from \"./Graph\";\r\nimport Spinner from \"./Spinner\";\r\nimport Alert from \"./Alert\";\r\nimport moment from \"moment\";\r\n\r\nconst Home = () => {\r\n  const [groupedInvoices, setGroupedInvoices] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchInvoices = async () => {\r\n      try {\r\n        const response = await axios.get(\"/invoices\");\r\n        if (response.status === 200 && Array.isArray(response.data)) {\r\n          const invoices = response.data;\r\n\r\n          // Process invoices to group by month for the last 6 months\r\n          const lastSixMonths = [];\r\n          for (let i = 5; i >= 0; i--) {\r\n            lastSixMonths.push(moment().subtract(i, \"months\").format(\"YYYY-MM\"));\r\n          }\r\n\r\n          const groupedData = lastSixMonths.map((month) => {\r\n            const sales = invoices\r\n              .filter(\r\n                (invoice) =>\r\n                  invoice.type === \"sales\" &&\r\n                  moment(invoice.invoiceDate).format(\"YYYY-MM\") === month\r\n              )\r\n              .reduce((sum, invoice) => sum + parseFloat(invoice.invoiceTotal || 0), 0);\r\n\r\n            const purchases = invoices\r\n              .filter(\r\n                (invoice) =>\r\n                  invoice.type === \"purchase\" &&\r\n                  moment(invoice.invoiceDate).format(\"YYYY-MM\") === month\r\n              )\r\n              .reduce((sum, invoice) => sum + parseFloat(invoice.invoiceTotal || 0), 0);\r\n\r\n            return { month, sales, purchases };\r\n          });\r\n\r\n          setGroupedInvoices(groupedData);\r\n        } else {\r\n          setAlert({\r\n            type: \"warning\",\r\n            message: \"No invoice data available to display.\",\r\n          });\r\n        }\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        setAlert({\r\n          type: \"danger\",\r\n          message: `Error fetching invoice data: ${error.message}`,\r\n        });\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchInvoices();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <div className=\"container text-center mt-4\">\r\n        <h3>Sales and Purchase Overview (Last 6 Months)</h3>\r\n        {alert && <Alert type={alert.type} message={alert.message} />}\r\n        {isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <Graph graphData={groupedInvoices} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMkB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,WAAW,CAAC;QAC7C,IAAID,QAAQ,CAACE,MAAM,KAAK,GAAG,IAAIC,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACK,IAAI,CAAC,EAAE;UAC3D,MAAMC,QAAQ,GAAGN,QAAQ,CAACK,IAAI;;UAE9B;UACA,MAAME,aAAa,GAAG,EAAE;UACxB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;YAC3BD,aAAa,CAACE,IAAI,CAACrB,MAAM,CAAC,CAAC,CAACsB,QAAQ,CAACF,CAAC,EAAE,QAAQ,CAAC,CAACG,MAAM,CAAC,SAAS,CAAC,CAAC;UACtE;UAEA,MAAMC,WAAW,GAAGL,aAAa,CAACM,GAAG,CAAEC,KAAK,IAAK;YAC/C,MAAMC,KAAK,GAAGT,QAAQ,CACnBU,MAAM,CACJC,OAAO,IACNA,OAAO,CAACC,IAAI,KAAK,OAAO,IACxB9B,MAAM,CAAC6B,OAAO,CAACE,WAAW,CAAC,CAACR,MAAM,CAAC,SAAS,CAAC,KAAKG,KACtD,CAAC,CACAM,MAAM,CAAC,CAACC,GAAG,EAAEJ,OAAO,KAAKI,GAAG,GAAGC,UAAU,CAACL,OAAO,CAACM,YAAY,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;YAE3E,MAAMC,SAAS,GAAGlB,QAAQ,CACvBU,MAAM,CACJC,OAAO,IACNA,OAAO,CAACC,IAAI,KAAK,UAAU,IAC3B9B,MAAM,CAAC6B,OAAO,CAACE,WAAW,CAAC,CAACR,MAAM,CAAC,SAAS,CAAC,KAAKG,KACtD,CAAC,CACAM,MAAM,CAAC,CAACC,GAAG,EAAEJ,OAAO,KAAKI,GAAG,GAAGC,UAAU,CAACL,OAAO,CAACM,YAAY,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;YAE3E,OAAO;cAAET,KAAK;cAAEC,KAAK;cAAES;YAAU,CAAC;UACpC,CAAC,CAAC;UAEF9B,kBAAkB,CAACkB,WAAW,CAAC;QACjC,CAAC,MAAM;UACLd,QAAQ,CAAC;YACPoB,IAAI,EAAE,SAAS;YACfO,OAAO,EAAE;UACX,CAAC,CAAC;QACJ;QACA7B,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAO8B,KAAK,EAAE;QACd5B,QAAQ,CAAC;UACPoB,IAAI,EAAE,QAAQ;UACdO,OAAO,EAAE,gCAAgCC,KAAK,CAACD,OAAO;QACxD,CAAC,CAAC;QACF7B,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDG,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAAqC,QAAA,gBACErC,OAAA,CAACN,MAAM;MAAA4C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVzC,OAAA;MAAK0C,SAAS,EAAC,4BAA4B;MAAAL,QAAA,gBACzCrC,OAAA;QAAAqC,QAAA,EAAI;MAA2C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACnDlC,KAAK,iBAAIP,OAAA,CAACH,KAAK;QAAC+B,IAAI,EAAErB,KAAK,CAACqB,IAAK;QAACO,OAAO,EAAE5B,KAAK,CAAC4B;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC5DpC,SAAS,gBACRL,OAAA,CAACJ,OAAO;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEXzC,OAAA,CAACL,KAAK;QAACgD,SAAS,EAAExC;MAAgB;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACrC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvC,EAAA,CAxEID,IAAI;AAAA2C,EAAA,GAAJ3C,IAAI;AA0EV,eAAeA,IAAI;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}