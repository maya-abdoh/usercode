{"ast":null,"code":"var _jsxFileName = \"D:\\\\usercode\\\\FinGenius\\\\frontend\\\\src\\\\components\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Spinner from \"./Spinner\";\nimport Alert from \"./Alert\";\nimport Graph from \"./Graph\";\nimport NavBar from \"./NavBar\"; // تأكد من أنك قمت باستيراد مكون NavBar\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  // State variables\n  const [isLoading, setIsLoading] = useState(false);\n  const [alertType, setAlertType] = useState(null);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [groupedInvoices, setGroupedInvoices] = useState([]);\n\n  // Fetch and process invoice data\n  useEffect(() => {\n    setIsLoading(true); // Start loading\n\n    const fetchInvoices = async () => {\n      try {\n        const response = await axios.get(`/invoices`);\n        if (response.status === 200) {\n          if (response.data.length === 0) {\n            setAlertType(\"warning\");\n            setAlertMessage(\"No Sales/Purchase data found.\");\n          } else {\n            const currentDate = new Date();\n            const groupedInvoices = {};\n            const lastSixMonths = [];\n\n            // Create an array for the last six months\n            for (let i = 0; i < 6; i++) {\n              lastSixMonths.push(`${currentDate.getMonth() + 1}/${currentDate.getFullYear()}`);\n              currentDate.setMonth(currentDate.getMonth() - 1);\n            }\n\n            // Group invoices by month and calculate totals\n            response.data.forEach(invoice => {\n              const {\n                type,\n                invoiceTotal\n              } = invoice.invoice;\n              const invoiceDate = new Date(invoice.invoice.invoiceDate);\n              const monthYear = `${invoiceDate.getMonth() + 1}/${invoiceDate.getFullYear()}`;\n              if (!groupedInvoices[monthYear]) {\n                groupedInvoices[monthYear] = {\n                  salesInvoiceTotal: 0,\n                  purchaseInvoiceTotal: 0\n                };\n              }\n              if (type === \"sales\") {\n                groupedInvoices[monthYear].salesInvoiceTotal += parseFloat(invoiceTotal);\n              } else if (type === \"purchase\") {\n                groupedInvoices[monthYear].purchaseInvoiceTotal += parseFloat(invoiceTotal);\n              }\n            });\n\n            // Fill missing months with zeros\n            lastSixMonths.forEach(month => {\n              if (!groupedInvoices[month]) {\n                groupedInvoices[month] = {\n                  salesInvoiceTotal: 0,\n                  purchaseInvoiceTotal: 0\n                };\n              }\n            });\n\n            // Convert grouped data to an array\n            const formattedInvoices = lastSixMonths.map(month => ({\n              month,\n              ...groupedInvoices[month]\n            }));\n            setGroupedInvoices(formattedInvoices);\n\n            // Debugging\n            console.log(\"Grouped Invoices:\", formattedInvoices);\n          }\n        } else {\n          setAlertType(\"danger\");\n          setAlertMessage(`Failed to retrieve invoices: ${response.status} ${response.statusText}`);\n        }\n        setIsLoading(false); // Stop loading\n      } catch (error) {\n        setAlertType(\"danger\");\n        setAlertMessage(`Failed to retrieve invoices: ${error.message}`);\n        setIsLoading(false); // Stop loading on error\n      }\n    };\n    fetchInvoices();\n  }, []);\n\n  // Render component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-8 offset-md-2\",\n      style: {\n        height: \"400px\"\n      },\n      children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this) : alertMessage ? /*#__PURE__*/_jsxDEV(Alert, {\n        type: alertType,\n        message: alertMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this) : groupedInvoices.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mt-4 mb-5\",\n          children: \"Sales and Purchase Data for Last 6 Months\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Graph, {\n          graphData: groupedInvoices\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Alert, {\n        type: \"warning\",\n        message: \"No data available to display.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"l7HPxw9wJX7oS3fZszBOEVaQcBw=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","Spinner","Alert","Graph","NavBar","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","isLoading","setIsLoading","alertType","setAlertType","alertMessage","setAlertMessage","groupedInvoices","setGroupedInvoices","fetchInvoices","response","get","status","data","length","currentDate","Date","lastSixMonths","i","push","getMonth","getFullYear","setMonth","forEach","invoice","type","invoiceTotal","invoiceDate","monthYear","salesInvoiceTotal","purchaseInvoiceTotal","parseFloat","month","formattedInvoices","map","console","log","statusText","error","message","className","children","style","height","fileName","_jsxFileName","lineNumber","columnNumber","graphData","_c","$RefreshReg$"],"sources":["D:/usercode/FinGenius/frontend/src/components/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"./Spinner\";\r\nimport Alert from \"./Alert\";\r\nimport Graph from \"./Graph\";\r\nimport NavBar from \"./NavBar\"; // تأكد من أنك قمت باستيراد مكون NavBar\r\n\r\n\r\nconst Home = () => {\r\n  // State variables\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [alertType, setAlertType] = useState(null);\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const [groupedInvoices, setGroupedInvoices] = useState([]);\r\n\r\n  // Fetch and process invoice data\r\n  useEffect(() => {\r\n    setIsLoading(true); // Start loading\r\n\r\n    const fetchInvoices = async () => {\r\n      try {\r\n        const response = await axios.get(`/invoices`);\r\n\r\n        if (response.status === 200) {\r\n          if (response.data.length === 0) {\r\n            setAlertType(\"warning\");\r\n            setAlertMessage(\"No Sales/Purchase data found.\");\r\n          } else {\r\n            const currentDate = new Date();\r\n            const groupedInvoices = {};\r\n            const lastSixMonths = [];\r\n\r\n            // Create an array for the last six months\r\n            for (let i = 0; i < 6; i++) {\r\n              lastSixMonths.push(\r\n                `${currentDate.getMonth() + 1}/${currentDate.getFullYear()}`\r\n              );\r\n              currentDate.setMonth(currentDate.getMonth() - 1);\r\n            }\r\n\r\n            // Group invoices by month and calculate totals\r\n            response.data.forEach((invoice) => {\r\n              const { type, invoiceTotal } = invoice.invoice;\r\n              const invoiceDate = new Date(invoice.invoice.invoiceDate);\r\n              const monthYear = `${\r\n                invoiceDate.getMonth() + 1\r\n              }/${invoiceDate.getFullYear()}`;\r\n\r\n              if (!groupedInvoices[monthYear]) {\r\n                groupedInvoices[monthYear] = {\r\n                  salesInvoiceTotal: 0,\r\n                  purchaseInvoiceTotal: 0,\r\n                };\r\n              }\r\n\r\n              if (type === \"sales\") {\r\n                groupedInvoices[monthYear].salesInvoiceTotal += parseFloat(\r\n                  invoiceTotal\r\n                );\r\n              } else if (type === \"purchase\") {\r\n                groupedInvoices[monthYear].purchaseInvoiceTotal += parseFloat(\r\n                  invoiceTotal\r\n                );\r\n              }\r\n            });\r\n\r\n            // Fill missing months with zeros\r\n            lastSixMonths.forEach((month) => {\r\n              if (!groupedInvoices[month]) {\r\n                groupedInvoices[month] = {\r\n                  salesInvoiceTotal: 0,\r\n                  purchaseInvoiceTotal: 0,\r\n                };\r\n              }\r\n            });\r\n\r\n            // Convert grouped data to an array\r\n            const formattedInvoices = lastSixMonths.map((month) => ({\r\n              month,\r\n              ...groupedInvoices[month],\r\n            }));\r\n            setGroupedInvoices(formattedInvoices);\r\n\r\n            // Debugging\r\n            console.log(\"Grouped Invoices:\", formattedInvoices);\r\n          }\r\n        } else {\r\n          setAlertType(\"danger\");\r\n          setAlertMessage(\r\n            `Failed to retrieve invoices: ${response.status} ${response.statusText}`\r\n          );\r\n        }\r\n\r\n        setIsLoading(false); // Stop loading\r\n      } catch (error) {\r\n        setAlertType(\"danger\");\r\n        setAlertMessage(`Failed to retrieve invoices: ${error.message}`);\r\n        setIsLoading(false); // Stop loading on error\r\n      }\r\n    };\r\n\r\n    fetchInvoices();\r\n  }, []);\r\n\r\n  // Render component\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-8 offset-md-2\" style={{ height: \"400px\" }}>\r\n        {isLoading ? (\r\n          <Spinner />\r\n        ) : alertMessage ? (\r\n          <Alert type={alertType} message={alertMessage} />\r\n        ) : groupedInvoices.length > 0 ? (\r\n          <>\r\n            <h2 className=\"mt-4 mb-5\">\r\n              Sales and Purchase Data for Last 6 Months\r\n            </h2>\r\n            <Graph graphData={groupedInvoices} />\r\n          </>\r\n        ) : (\r\n          <Alert type=\"warning\" message=\"No data available to display.\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}